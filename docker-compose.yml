networks:
  project:
    driver: bridge
    name: ${COMPOSE_PROJECT_NAME}

volumes:
  db:
    name: ${COMPOSE_PROJECT_NAME}_db_data
  app-home:
    name: ${COMPOSE_PROJECT_NAME}_app_home_dir

services:
  webserver:
    build:
      context: .docker
      dockerfile: dev.Dockerfile
      args:
        - USER_TERM=${TERM:-xterm-256color}
        - ZSHTHEME=${ZSH_THEME:-maran}
        - PROJECT_PATH=/ladybug
    volumes:
      - .:/ladybug
    env_file:
      - .docker/.env
    networks:
      - project
    ports:
      - '8000:8000'
    command: /home/app/.local/bin/poetry run python manage.py runserver 0.0.0.0:8000
    user: app
    depends_on:
      - db

  app:
    build:
      context: .docker
      dockerfile: dev.Dockerfile
      args:
        - USER_TERM=${TERM:-xterm-256color}
        - ZSHTHEME=${ZSH_THEME:-maran}
        - PROJECT_PATH=/ladybug
    volumes:
      - type: volume
        source: app-home
        target: /home/app
        volume:
          nocopy: false
      - ${LOCAL_WORKSPACE_FOLDER:-./}:/ladybug
    env_file:
      - .docker/.env
    networks:
      - project
    user: app
    depends_on:
      - db
  
  db:
    image: postgres:16
    volumes:
      - db:/var/lib/postgresql/data
    env_file:
      - .docker/.env
    networks:
      - project
    ports:
      - '5432:5432'
